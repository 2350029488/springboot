断言机制就是测试，在内部寻找错误Assertions
在同一个方法中 如果先执行的断言失败 那么后面的断言就会失效

简单断言
assertEquals        判断两个对象或两个原始类型是否相等
assertNotEquals     判断两个对象或两个原始类型是否不相等
assertSame          判断两个对象引用是否指向同一个对象
assertNotSame       判断两个对象引用是否指向不同的对象
assertTrue          判断给定的布尔值是否为 true
assertFalse         判断给定的布尔值是否为 false
assertNull          判断给定的对象引用是否为 null
assertNotNull       判断给定的对象引用是否不为 null
----------------------------------------------
2、数组断言
通过 assertArrayEquals 方法来判断两个对象或原始类型的数组是否相等
----------------------------------------------
3、组合断言
assertAll 方法接受多个 org.junit.jupiter.api.Executable
函数式接口的实例作为要验证的断言，可以通过 lambda 表达式很容易的提供这些断言
----------------------------------------------
4、异常断言
在JUnit4时期，想要测试方法的异常情况时，需要用@Rule注解的ExpectedException变量还是比较麻烦的。
而JUnit5提供了一种新的断言方式Assertions.assertThrows() ,配合函数式编程就可以进行使用。
----------------------------------------------
5、超时断言
Junit5还提供了Assertions.assertTimeout() 为测试方法设置了超时时间
----------------------------------------------
6、快速失败
通过 fail 方法直接使得测试失败

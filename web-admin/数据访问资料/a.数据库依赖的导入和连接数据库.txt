<!--        导入数据源 jdbc -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>

 数据库驱动？
 为什么导入JDBC场景，官方不导入驱动？官方不知道我们接下要操作什么数据库。
 数据库版本和驱动版本对应
 默认版本：<mysql.version>8.0.22</mysql.version>

 想要修改版本 第一种办法:
 1、直接依赖引入具体版本（maven的就近依赖原则）
         <dependency>
             <groupId>mysql</groupId>
             <artifactId>mysql-connector-java</artifactId>
 <!--            <version>5.1.49</version>-->
         </dependency>

 2、重新声明版本（maven的属性的就近优先原则）第二种办法:
     <properties>
         <java.version>1.8</java.version>
         <mysql.version>5.1.49</mysql.version>
     </properties>
========================================================
● DataSourceAutoConfiguration ： 数据源的自动配置
  ○ 修改数据源相关的配置：spring.datasource
  ○ 数据库连接池的配置，是自己容器中没有DataSource才自动配置的
  ○ 底层配置好的连接池是：HikariDataSource
● DataSourceTransactionManagerAutoConfiguration： 事务管理器的自动配置
● JdbcTemplateAutoConfiguration： JdbcTemplate的自动配置，可以来对数据库进行crud
  ○ 可以修改这个配置项@ConfigurationProperties(prefix = "spring.jdbc") 来修改JdbcTemplate
  ○ @Bean@Primary    JdbcTemplate；容器中有这个组件
● JndiDataSourceAutoConfiguration： jndi的自动配置
● XADataSourceAutoConfiguration： 分布式事务相关的

============================================================
#配置数据源
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/user?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root

# jdbcTemplate的超时时间
spring.jdbc.template.query-timeout=3

在测试类中进行测试数据库的查询

  /**
     * 爆红是idea的检查机制  不影响
     */
    @Autowired
    @Qualifier(value = "jdbcTemplate")
    JdbcTemplate jdbcTemplate;

    @Test
    void contextLoads() {
        Long aLong = jdbcTemplate.queryForObject("select count(*) from book", Long.class);
        log.info("记录总数:{}",aLong);
        List<Map<String, Object>> maps = jdbcTemplate.queryForList("select *from book");
        log.info("数据:{}",maps);
    }

1.配置模式
● 全局配置文件
● SqlSessionFactory: 自动配置好了
● SqlSession：自动配置了 SqlSessionTemplate 组合了SqlSession
● @Import(AutoConfiguredMapperScannerRegistrar.class）；
● Mapper： 只要我们写的操作MyBatis的接口标准了 @Mapper 就会被自动扫描进来
源码
@EnableConfigurationProperties(MybatisProperties.class) ： MyBatis配置项绑定类。
@AutoConfigureAfter({ DataSourceAutoConfiguration.class, MybatisLanguageDriverAutoConfiguration.class })
public class MybatisAutoConfiguration{}

@ConfigurationProperties(prefix = "mybatis")
public class MybatisProperties
可以修改配置文件中 mybatis 开始的所有；
--------------------------------------
配置模式全过程：
● 导入mybatis官方starter
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.4</version>
        </dependency>
● 编写mapper接口。标准@Mapper注解
● 编写sql映射文件并绑定mapper接口
● 在application.yaml中指定Mapper配置文件的位置，以及指定全局配置文件的信息
（建议；配置在mybatis.configuration）


/**
 * mybatis纯注解版与配置版的差别就是对于简单的sql可以直接在mapper的方法上
 * 写对于的查询 ，对于复杂的sql还是要写mapper.xml文件
 *
 * 混合版就是一个对pojo的操作既有注解mapper又有mapper.xml文件
 */

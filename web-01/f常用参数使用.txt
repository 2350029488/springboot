@PathVariable、
@RequestHeader、
@ModelAttribute、
@RequestParam、
@MatrixVariable、
@CookieValue、
@RequestBody

 ===================================================
@PathVariable、占位符
 /*可以直接键值对形式获取占位符的参数*/     @GetMapping("/car/{id}/owner/{username}")
 @PathVariable Map<String,String> pv,/*map只能是String类型*/
 ===================================================
 @RequestHeader、请求头
    /*获取请求头*/
    @RequestHeader("User-Agent") String herder,
    /*获取请求头的集合*/
    @RequestHeader() Map<String,String> herders,
===================================================
@CookieValue、 获取Cookie

===================================================
@RequestParam、
  @RequestParam MultiValueMap<String,String> params//MultiValueMap获取多个参数

===================================================
 @RequestAttribute() 类似等同于 HttpServletRequest request
/* 通过@RequestAttribute获取请求域中的参数*/
   @RequestAttribute("msg1")String msg1,

===================================================
@RequestBody
   /*请求体，争对post的表单提交*/
      @RequestBody String content 获取的值就是表单提交的值
         如果name等于pojo的对象的属性，并且请求参数获取是pojo的类型 则自动赋值，也不需要写@RequestBody
          比如
          public String method(User user) 前提是表单的name必须是User的属性名
===================================================

@MatrixVariable、 矩阵变量
    如果页面开发cookie被禁用了 要获取session里面的内容可以通过矩阵变量的方式进行传递

    <li>矩阵变量需要在SpringBoot中手动开启</li>
    <li>根据RFC3986的规范，矩阵变量应当绑定在路径变量中！</li>
    <li>若是有多个矩阵变量，应当使用英文符号;进行分隔。</li>
    <li>若是一个矩阵变量有多个值，应当使用英文符号,进行分隔，或之命名多个重复的key即可。</li>
    <li>如：/cars/sell;low=34;brand=byd,audi,yd</li>
    ====================================================
        手动开启
 @Bean
    public WebMvcConfigurer webMvcConfigurer(){
   return new WebMvcConfigurer() {
       /**
        * 设置矩阵变量 不移除 ; 后面的内容  矩阵变量功能就可以生效
        * @param configurer
        */
         @Override
         public void configurePathMatch(PathMatchConfigurer configurer) {
            UrlPathHelper urlPathHelper=new UrlPathHelper();
            //不移除 ; 后面的内容  矩阵变量功能就可以生效
            urlPathHelper.setRemoveSemicolonContent(false);
            configurer.setUrlPathHelper(urlPathHelper);
         }
